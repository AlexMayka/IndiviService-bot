services:
  db:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: app
    restart: always
    volumes:
      - ../logs:/logs
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - internal

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - "${RD_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/data
    networks:
      - internal

  loki:
    image: grafana/loki:latest
    container_name: grafana-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki/data:/tmp/loki
    networks:
      - internal

  promtail:
    image: grafana/promtail:latest
    container_name: grafana-promtail
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yml
      - ../logs:/logs
    command: -config.file=/etc/promtail/config.yml
    networks:
      - internal

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - internal

volumes:
  db-data:
  redis:
  grafana-storage: {}

networks:
  internal:
    driver: bridge